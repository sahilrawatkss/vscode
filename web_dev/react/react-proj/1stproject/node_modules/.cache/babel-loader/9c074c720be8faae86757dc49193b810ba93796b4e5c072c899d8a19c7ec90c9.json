{"ast":null,"code":"var _jsxFileName = \"D:\\\\vscode\\\\web_dev\\\\react\\\\react-proj\\\\1stproject\\\\src\\\\components\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport data from \"./data\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Accordion() {\n  _s();\n  const [singleSelection, enableSingleSelection] = useState(null);\n  const [multiSelection, enableMultiSelection] = useState(false);\n  const [multiple, setMultiple] = useState([]);\n  function handleMultiSelection(id) {\n    enableSingleSelection(null);\n    let cpyMultiple = [...multiple];\n    if (cpyMultiple.includes(id)) {\n      cpyMultiple = cpyMultiple.filter(item => id !== item);\n    } else {\n      cpyMultiple.push(id);\n    }\n    setMultiple(cpyMultiple);\n  }\n  function handleSingleSelection(id) {\n    setMultiple([]);\n    enableSingleSelection(id === singleSelection ? null : id);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => enableMultiSelection(!multiSelection),\n      children: multiSelection ? \"Disable MultiSelection\" : \"Enable MultiSelection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Accordian\",\n      children: data.map(dataItem => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: multiSelection ? () => handleMultiSelection(dataItem.id) : () => handleSingleSelection(dataItem.id),\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: dataItem.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), multiSelection ? multiple.includes(dataItem.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: dataItem.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this) : singleSelection === dataItem.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: dataItem.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Accordion, \"S5Q4NqOnntjaPGsK8savhaxJSN4=\");\n_c = Accordion;\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["React","useState","data","jsxDEV","_jsxDEV","Accordion","_s","singleSelection","enableSingleSelection","multiSelection","enableMultiSelection","multiple","setMultiple","handleMultiSelection","id","cpyMultiple","includes","filter","item","push","handleSingleSelection","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","dataItem","question","answer","_c","$RefreshReg$"],"sources":["D:/vscode/web_dev/react/react-proj/1stproject/src/components/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport data from \"./data\";\r\nimport \"./style.css\";\r\n\r\nexport default function Accordion() {\r\n  const [singleSelection, enableSingleSelection] = useState(null);\r\n  const [multiSelection, enableMultiSelection] = useState(false);\r\n  const [multiple, setMultiple] = useState([]);\r\n\r\n  function handleMultiSelection(id) {\r\n    enableSingleSelection(null);\r\n    let cpyMultiple = [...multiple];\r\n    if (cpyMultiple.includes(id)) {\r\n      cpyMultiple = cpyMultiple.filter((item) => id !== item);\r\n    } else {\r\n      cpyMultiple.push(id);\r\n    }\r\n    setMultiple(cpyMultiple);\r\n  }\r\n\r\n  function handleSingleSelection(id) {\r\n    setMultiple([]);\r\n    enableSingleSelection(id === singleSelection ? null : id);\r\n  }\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => enableMultiSelection(!multiSelection)}\r\n      >\r\n        {multiSelection ? \"Disable MultiSelection\" : \"Enable MultiSelection\"}\r\n      </button>\r\n\r\n      <div className=\"Accordian\">\r\n        {data.map((dataItem) => (\r\n          <div\r\n            onClick={\r\n              multiSelection\r\n                ? () => handleMultiSelection(dataItem.id)\r\n                : () => handleSingleSelection(dataItem.id)\r\n            }\r\n            className=\"item\"\r\n          >\r\n            <div className=\"title\">\r\n              <h3>{dataItem.question}</h3>\r\n              <span>+</span>\r\n            </div>\r\n            {multiSelection ? (\r\n              multiple.includes(dataItem.id) && (\r\n                <div className=\"content\">{dataItem.answer}</div>\r\n              )\r\n            ) : singleSelection === dataItem.id ? (\r\n              <div className=\"content\">{dataItem.answer}</div>\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}